<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.8.xsd">

    <changeSet id="JMK_10_001-create-enum-types" author="Pawanpreet Singh">
        <sql>CREATE TYPE user_role AS ENUM ('CLIENT', 'FREELANCER', 'ADMIN', 'CLIENT_FREELANCER');</sql>
        <sql>CREATE TYPE status AS ENUM('ACTIVE','DEACTIVATED','DELETED', 'SUSPENDED', 'BANNED','PENDING');</sql>
    </changeSet>

    <changeSet id="JMK_10_002-create-users-table" author="Pawanpreet Singh">
        <createTable tableName="users">
            <column name="user_id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="email" type="VARCHAR(255)">
                <constraints unique="true" nullable="false"/>
            </column>
            <column name="first_name" type="VARCHAR(100)">
                <constraints nullable="false"/>
            </column>
            <column name="last_name" type="VARCHAR(100)">
                <constraints nullable="false"/>
            </column>
            <column name="role" type="user_role"/>
            <column name="account_status" type="status"/>
            <column name="created_at" type="TIMESTAMP" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated_at" type="TIMESTAMP" defaultValueComputed="CURRENT_TIMESTAMP"/>
        </createTable>
    </changeSet>

    <changeSet id="JMK_10_003-create-trigger-function" author="Pawanpreet Singh">
        <sql>
            CREATE OR REPLACE FUNCTION update_last_updated_column()
            RETURNS TRIGGER AS $$
            BEGIN
            NEW.updated_at = NOW();
            RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
        </sql>
    </changeSet>

    <changeSet id="JMK_10_004-create-trigger" author="Pawanpreet Singh">
        <sql>
            CREATE TRIGGER set_updated_at
            BEFORE UPDATE ON users
            FOR EACH ROW
            EXECUTE FUNCTION update_last_updated_column();
        </sql>
    </changeSet>

</databaseChangeLog>



